# ../../sw/kt/fgcepics/fgcudpSup/Db/fgcudp_class_63.substitutions - This file is automatically generated by `parser/Output/EPICS/records/udp_records.pm`



############################################
# Status publication records for class 63  #
############################################



######## Common records to all classes ########

# Long inputs

file "fgcudp_longin.template"
{
pattern
{ RECORD    , PARAM           , EGU , DESC                      }
{ "CLASS_ID", "CLASS_ID__INT" , ""  , "Device class identifier" }
}

# Waveform inputs

file "fgcudp_waveform.template"
{
pattern
{ RECORD             , PARAM              , NELM   , DESC                 }
{ "DATA_STATUS:_STR" , "DATA_STATUS__STR" , "256"  , "Device data status" }
}

# Bit inputs

file "fgcudp_bi.template"
{
pattern
{ RECORD                    , PARAM             , MASK  , ONAM          , DESC                                    }
{ "DATA_STATUS:DEVICE_IN_DB", "DATA_STATUS__RAW", "0x01", "DEVICE_IN_DB", "Device is defined in the database"      }
{ "DATA_STATUS:DATA_VALID"  , "DATA_STATUS__RAW", "0x02", "DATA_VALID"  , "Data is fresh"                         }
{ "DATA_STATUS:CLASS_VALID" , "DATA_STATUS__RAW", "0x04", "CLASS_VALID" , "Device class agrees with the database" }
}



######## Records for class 63 ########

# Waveform inputs

file "fgcudp_waveform.template"
{
pattern
{ RECORD                      , PARAM                   , NELM    , DESC                                      }
{ "ST_FAULTS:_STR"            , "ST_FAULTS__STR"        , "256"   , "Device faults (alarms)"                  }
{ "ST_WARNINGS:_STR"          , "ST_WARNINGS__STR"      , "256"   , "Device warnings (alarms)"                }
{ "ST_LATCHED:_STR"           , "ST_LATCHED__STR"       , "256"   , "Latched status"                          }
{ "ST_UNLATCHED:_STR"         , "ST_UNLATCHED__STR"     , "256"   , "Unlatched status"                        }
{ "ST_ADC_A:_STR"             , "ST_ADC_A__STR"         , "256"   , "ADC A status"                            }
{ "ST_ADC_B:_STR"             , "ST_ADC_B__STR"         , "256"   , "ADC B status"                            }
{ "ST_ADC_C:_STR"             , "ST_ADC_C__STR"         , "256"   , "ADC C status"                            }
{ "ST_ADC_D:_STR"             , "ST_ADC_D__STR"         , "256"   , "ADC D status"                            }
{ "ST_DCCT_A:_STR"            , "ST_DCCT_A__STR"        , "256"   , "DCCT A status"                           }
{ "ST_DCCT_B:_STR"            , "ST_DCCT_B__STR"        , "256"   , "DCCT B status"                           }
}

# String inputs

file "fgcudp_stringin.template"
{
pattern
{ RECORD                      , PARAM                   , DESC                                      }
{ "STATE_PLL:_STR"            , "STATE_PLL__STR"        , "Phase Locked Loop State"                 }
{ "STATE_OP:_STR"             , "STATE_OP__STR"         , "Operational State"                       }
{ "STATE_VS:_STR"             , "STATE_VS__STR"         , "Voltage source state"                    }
{ "STATE_PC:_STR"             , "STATE_PC__STR"         , "Power Converter State"                   }
}

# Bit inputs

file "fgcudp_bi.template"
{
pattern
{ RECORD                      , PARAM                   , MASK    , ONAM                    , DESC                                      }
{ "ST_FAULTS:FGC_HW"          , "ST_FAULTS__RAW"        , "0x0001", "FGC_HW"                , "FGC hardware fault"                      }
{ "ST_FAULTS:I_MEAS"          , "ST_FAULTS__RAW"        , "0x0002", "I_MEAS"                , "Current measurement fault"               }
{ "ST_FAULTS:REG_ERROR"       , "ST_FAULTS__RAW"        , "0x0004", "REG_ERROR"             , "Feedback loop fault"                     }
{ "ST_FAULTS:POL_SWITCH"      , "ST_FAULTS__RAW"        , "0x0008", "POL_SWITCH"            , "Polarity changer switch fault"           }
{ "ST_FAULTS:NO_PC_PERMIT"    , "ST_FAULTS__RAW"        , "0x0010", "NO_PC_PERMIT"          , "PC Permit not present"                   }
{ "ST_FAULTS:VS_STATE"        , "ST_FAULTS__RAW"        , "0x0020", "VS_STATE"              , "Voltage source state fault"              }
{ "ST_FAULTS:VS_RUN_TO"       , "ST_FAULTS__RAW"        , "0x0040", "VS_RUN_TO"             , "VSRUN timeout"                           }
{ "ST_FAULTS:VS_FAULT"        , "ST_FAULTS__RAW"        , "0x0080", "VS_FAULT"              , "Voltage source fault"                    }
{ "ST_FAULTS:VS_EXTINTLOCK"   , "ST_FAULTS__RAW"        , "0x0100", "VS_EXTINTLOCK"         , "Voltage source external interlock"       }
{ "ST_FAULTS:FGC_STATE"       , "ST_FAULTS__RAW"        , "0x0200", "FGC_STATE"             , "FGC State fault"                         }
{ "ST_FAULTS:FAST_ABORT"      , "ST_FAULTS__RAW"        , "0x0400", "FAST_ABORT"            , "PC Fast Abort received (External Fault)" }
{ "ST_FAULTS:LIMITS"          , "ST_FAULTS__RAW"        , "0x0800", "LIMITS"                , "Converter limits exceeded"               }
{ "ST_FAULTS:SLAVE"           , "ST_FAULTS__RAW"        , "0x1000", "SLAVE"                 , "Slave Fault Reported"                    }
{ "ST_FAULTS:I_RMS_LIM"       , "ST_FAULTS__RAW"        , "0x2000", "I_RMS_LIM"             , "Current RMS limit exceeded"              }
{ "ST_FAULTS:V_ERROR"         , "ST_FAULTS__RAW"        , "0x4000", "V_ERROR"               , "Voltage source gain fault"               }
{ "ST_WARNINGS:FGC_HW"        , "ST_WARNINGS__RAW"      , "0x0001", "FGC_HW"                , "FGC hardware warning"                    }
{ "ST_WARNINGS:I_MEAS"        , "ST_WARNINGS__RAW"      , "0x0002", "I_MEAS"                , "Current measurement warning"             }
{ "ST_WARNINGS:REG_ERROR"     , "ST_WARNINGS__RAW"      , "0x0004", "REG_ERROR"             , "Feedback loop warning"                   }
{ "ST_WARNINGS:FGC_PSU"       , "ST_WARNINGS__RAW"      , "0x0010", "FGC_PSU"               , "FGC PSU failure"                         }
{ "ST_WARNINGS:TEMPERATURE"   , "ST_WARNINGS__RAW"      , "0x0020", "TEMPERATURE"           , "Temperature measurement warning"         }
{ "ST_WARNINGS:SUBCONVTR_FLT" , "ST_WARNINGS__RAW"      , "0x0040", "SUBCONVTR_FLT"         , "Subconverter trip warning"               }
{ "ST_WARNINGS:I_RMS_LIM"     , "ST_WARNINGS__RAW"      , "0x0080", "I_RMS_LIM"             , "RMS current limit exceeded"              }
{ "ST_WARNINGS:TIMING_EVT"    , "ST_WARNINGS__RAW"      , "0x0100", "TIMING_EVT"            , "PPM timing event warning"                }
{ "ST_WARNINGS:REF_LIM"       , "ST_WARNINGS__RAW"      , "0x0200", "REF_LIM"               , "Reference limited warning"               }
{ "ST_WARNINGS:REF_RATE_LIM"  , "ST_WARNINGS__RAW"      , "0x0400", "REF_RATE_LIM"          , "Reference rate of change limited warning"}
{ "ST_WARNINGS:V_ERROR"       , "ST_WARNINGS__RAW"      , "0x0800", "V_ERROR"               , "Voltage source gain warning"             }
{ "ST_WARNINGS:SIMULATION"    , "ST_WARNINGS__RAW"      , "0x1000", "SIMULATION"            , "Simulated voltage source"                }
{ "ST_WARNINGS:CONFIG"        , "ST_WARNINGS__RAW"      , "0x2000", "CONFIG"                , "Invalid or changed configuration"        }
{ "ST_WARNINGS:EXT_SYNC_LOST" , "ST_WARNINGS__RAW"      , "0x8000", "EXT_SYNC_LOST"         , "50Hz external sync signal lost"          }
{ "ST_LATCHED:VDC_FAIL"       , "ST_LATCHED__RAW"       , "0x0001", "VDC_FAIL"              , "48VDC failure"                           }
{ "ST_LATCHED:VS_COMMS"       , "ST_LATCHED__RAW"       , "0x0002", "VS_COMMS"              , "FGC-ComHV-PS communications link fault"  }
{ "ST_LATCHED:DIM_SYNC_FLT"   , "ST_LATCHED__RAW"       , "0x0004", "DIM_SYNC_FLT"          , "DIM sync fault"                          }
{ "ST_LATCHED:DIMS_EXP_FLT"   , "ST_LATCHED__RAW"       , "0x0008", "DIMS_EXP_FLT"          , "DIMs expected fault"                     }
{ "ST_LATCHED:ID_FLT"         , "ST_LATCHED__RAW"       , "0x0010", "ID_FLT"                , "ID system fault"                         }
{ "ST_LATCHED:DSP_FLT"        , "ST_LATCHED__RAW"       , "0x0020", "DSP_FLT"               , "DSP fault"                               }
{ "ST_LATCHED:DIM_TRIG_FLT"   , "ST_LATCHED__RAW"       , "0x0040", "DIM_TRIG_FLT"          , "DIM trigger fault"                       }
{ "ST_LATCHED:SCIVS_EXP_FLT"  , "ST_LATCHED__RAW"       , "0x0100", "SCIVS_EXP_FLT"         , "SCIVS expected crate fault"              }
{ "ST_LATCHED:SPIVS_FLT"      , "ST_LATCHED__RAW"       , "0x0400", "SPIVS_FLT"             , "SPIVS fault"                             }
{ "ST_LATCHED:FGC_PSU_FAIL"   , "ST_LATCHED__RAW"       , "0x0800", "FGC_PSU_FAIL"          , "FGC PSU failure"                         }
{ "ST_LATCHED:DAC_FLT"        , "ST_LATCHED__RAW"       , "0x1000", "DAC_FLT"               , "DAC calibration fault"                   }
{ "ST_LATCHED:DALLAS_FLT"     , "ST_LATCHED__RAW"       , "0x2000", "DALLAS_FLT"            , "Dallas 1-wire bus fault detected"        }
{ "ST_LATCHED:DCCT_PSU_FAIL"  , "ST_LATCHED__RAW"       , "0x4000", "DCCT_PSU_FAIL"         , "DCCT PSU failure"                        }
{ "ST_UNLATCHED:NOMINAL_LOAD" , "ST_UNLATCHED__RAW"     , "0x0001", "NOMINAL_LOAD"          , "Power converter is running nominal load" }
{ "ST_UNLATCHED:SYNC_PLEASE"  , "ST_UNLATCHED__RAW"     , "0x0002", "SYNC_PLEASE"           , "Configuration sync request is active"    }
{ "ST_UNLATCHED:I_MEAS_DIFF"  , "ST_UNLATCHED__RAW"     , "0x0004", "I_MEAS_DIFF"           , "Current measurement difference too big"  }
{ "ST_UNLATCHED:POL_SWI_NEG"  , "ST_UNLATCHED__RAW"     , "0x0008", "POL_SWI_NEG"           , "Polarity switch negative"                }
{ "ST_UNLATCHED:POL_SWI_POS"  , "ST_UNLATCHED__RAW"     , "0x0010", "POL_SWI_POS"           , "Polarity switch positive"                }
{ "ST_UNLATCHED:PWR_FAILURE"  , "ST_UNLATCHED__RAW"     , "0x0020", "PWR_FAILURE"           , "Powering failure interlock generated"    }
{ "ST_UNLATCHED:PC_DISCH_RQ"  , "ST_UNLATCHED__RAW"     , "0x0040", "PC_DISCH_RQ"           , "Discharge request active"                }
{ "ST_UNLATCHED:PC_PERMIT"    , "ST_UNLATCHED__RAW"     , "0x0080", "PC_PERMIT"             , "PC permit signal received"               }
{ "ST_UNLATCHED:POST_MORTEM"  , "ST_UNLATCHED__RAW"     , "0x0100", "POST_MORTEM"           , "Post mortem log acquisition in progress" }
{ "ST_UNLATCHED:FIELDBUS_WRN" , "ST_UNLATCHED__RAW"     , "0x0200", "FIELDBUS_WRN"          , "Fieldbus warning"                        }
{ "ST_UNLATCHED:REF_RT_ACTIVE", "ST_UNLATCHED__RAW"     , "0x0400", "REF_RT_ACTIVE"         , "Real-time mode is REF_RT_ACTIVE"         }
{ "ST_UNLATCHED:VS_POWER_ON"  , "ST_UNLATCHED__RAW"     , "0x0800", "VS_POWER_ON"           , "Voltage source POWER ON received"        }
{ "ST_UNLATCHED:PC_REG_OK"    , "ST_UNLATCHED__RAW"     , "0x1000", "PC_REG_OK"             , "Power converter and FGC regulating"      }
{ "ST_UNLATCHED:LOW_CURRENT"  , "ST_UNLATCHED__RAW"     , "0x2000", "LOW_CURRENT"           , "Low current in circuit"                  }
{ "ST_UNLATCHED:SYNC_REGFGC3" , "ST_UNLATCHED__RAW"     , "0x4000", "SYNC_REGFGC3"          , "RegFGC3 firmware sync request is active" }
{ "ST_UNLATCHED:LOG_PLEASE"   , "ST_UNLATCHED__RAW"     , "0x8000", "LOG_PLEASE"            , "Post-mortem log flag"                    }
{ "ST_ADC_A:V_MEAS_OK"        , "ST_ADC_A__RAW"         , "0x0002", "V_MEAS_OK"             , "Voltage measurement is valid"            }
{ "ST_ADC_A:IN_USE"           , "ST_ADC_A__RAW"         , "0x0004", "IN_USE"                , "Meas channel being used to calc MEAS.I"  }
{ "ST_ADC_A:SIGNAL_STUCK"     , "ST_ADC_A__RAW"         , "0x0008", "SIGNAL_STUCK"          , "Signal measurement stuck"                }
{ "ST_ADC_A:CAL_ACTIVE"       , "ST_ADC_A__RAW"         , "0x0010", "CAL_ACTIVE"            , "Meas channel calibration in progress"    }
{ "ST_ADC_A:CAL_FAILED"       , "ST_ADC_A__RAW"         , "0x0020", "CAL_FAILED"            , "Measurement channel calibration failure" }
{ "ST_ADC_B:V_MEAS_OK"        , "ST_ADC_B__RAW"         , "0x0002", "V_MEAS_OK"             , "Voltage measurement is valid"            }
{ "ST_ADC_B:IN_USE"           , "ST_ADC_B__RAW"         , "0x0004", "IN_USE"                , "Meas channel being used to calc MEAS.I"  }
{ "ST_ADC_B:SIGNAL_STUCK"     , "ST_ADC_B__RAW"         , "0x0008", "SIGNAL_STUCK"          , "Signal measurement stuck"                }
{ "ST_ADC_B:CAL_ACTIVE"       , "ST_ADC_B__RAW"         , "0x0010", "CAL_ACTIVE"            , "Meas channel calibration in progress"    }
{ "ST_ADC_B:CAL_FAILED"       , "ST_ADC_B__RAW"         , "0x0020", "CAL_FAILED"            , "Measurement channel calibration failure" }
{ "ST_ADC_C:V_MEAS_OK"        , "ST_ADC_C__RAW"         , "0x0002", "V_MEAS_OK"             , "Voltage measurement is valid"            }
{ "ST_ADC_C:IN_USE"           , "ST_ADC_C__RAW"         , "0x0004", "IN_USE"                , "Meas channel being used to calc MEAS.I"  }
{ "ST_ADC_C:SIGNAL_STUCK"     , "ST_ADC_C__RAW"         , "0x0008", "SIGNAL_STUCK"          , "Signal measurement stuck"                }
{ "ST_ADC_C:CAL_ACTIVE"       , "ST_ADC_C__RAW"         , "0x0010", "CAL_ACTIVE"            , "Meas channel calibration in progress"    }
{ "ST_ADC_C:CAL_FAILED"       , "ST_ADC_C__RAW"         , "0x0020", "CAL_FAILED"            , "Measurement channel calibration failure" }
{ "ST_ADC_D:V_MEAS_OK"        , "ST_ADC_D__RAW"         , "0x0002", "V_MEAS_OK"             , "Voltage measurement is valid"            }
{ "ST_ADC_D:IN_USE"           , "ST_ADC_D__RAW"         , "0x0004", "IN_USE"                , "Meas channel being used to calc MEAS.I"  }
{ "ST_ADC_D:SIGNAL_STUCK"     , "ST_ADC_D__RAW"         , "0x0008", "SIGNAL_STUCK"          , "Signal measurement stuck"                }
{ "ST_ADC_D:CAL_ACTIVE"       , "ST_ADC_D__RAW"         , "0x0010", "CAL_ACTIVE"            , "Meas channel calibration in progress"    }
{ "ST_ADC_D:CAL_FAILED"       , "ST_ADC_D__RAW"         , "0x0020", "CAL_FAILED"            , "Measurement channel calibration failure" }
{ "ST_DCCT_A:FAULT"           , "ST_DCCT_A__RAW"        , "0x0004", "FAULT"                 , "DCCT fault reported"                     }
{ "ST_DCCT_A:MEAS_OK"         , "ST_DCCT_A__RAW"        , "0x0010", "MEAS_OK"               , "DCCT measurement valid"                  }
{ "ST_DCCT_A:CAL_FLT"         , "ST_DCCT_A__RAW"        , "0x0080", "CAL_FLT"               , "DCCT calibration fault"                  }
{ "ST_DCCT_B:FAULT"           , "ST_DCCT_B__RAW"        , "0x0004", "FAULT"                 , "DCCT fault reported"                     }
{ "ST_DCCT_B:MEAS_OK"         , "ST_DCCT_B__RAW"        , "0x0010", "MEAS_OK"               , "DCCT measurement valid"                  }
{ "ST_DCCT_B:CAL_FLT"         , "ST_DCCT_B__RAW"        , "0x0080", "CAL_FLT"               , "DCCT calibration fault"                  }
}

# Enum inputs

file "fgcudp_mbbi.template"
{
pattern
{ RECORD                      , PARAM                   , MASK  , UNSV      , DESC                                      ,
    VAL0  , STR0                    , SEV0      , DESC0                                     ,
    VAL1  , STR1                    , SEV1      , DESC1                                     ,
    VAL2  , STR2                    , SEV2      , DESC2                                     ,
    VAL3  , STR3                    , SEV3      , DESC3                                     ,
    VAL4  , STR4                    , SEV4      , DESC4                                     ,
    VAL5  , STR5                    , SEV5      , DESC5                                     ,
    VAL6  , STR6                    , SEV6      , DESC6                                     ,
    VAL7  , STR7                    , SEV7      , DESC7                                     ,
    VAL8  , STR8                    , SEV8      , DESC8                                     ,
    VAL9  , STR9                    , SEV9      , DESC9                                     ,
    VAL10 , STR10                   , SEV10     , DESC10                                    ,
    VAL11 , STR11                   , SEV11     , DESC11                                    ,
    VAL12 , STR12                   , SEV12     , DESC12                                    ,
    VAL13 , STR13                   , SEV13     , DESC13                                    ,
    VAL14 , STR14                   , SEV14     , DESC14                                    ,
    VAL15 , STR15                   , SEV15     , DESC15                                    }
{ "STATE_PLL"                 , "STATE_PLL__RAW"        , "0xFF", "INVALID" , "Phase Locked Loop State"                 ,
    "0x00", "LOCKED"                , ""          , "PLL locked"                              ,
    "0x01", "CAPTURE"               , ""          , "PLL capturing"                           ,
    "0x02", "FAST_SLEW"             , ""          , "PLL fast slewing"                        ,
    "0x03", "NO_SYNC"               , ""          , "No sync pulses for PLL"                  ,
    "0x04", "FAILED"                , ""          , "PLL failed"                              ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        }
{ "STATE_OP"                  , "STATE_OP__RAW"         , "0xFF", "INVALID" , "Operational State"                       ,
    "0x00", "UNCONFIGURED"          , ""          , "FGC is unconfigured"                     ,
    "0x01", "NORMAL"                , ""          , "FGC is in normal operating mode"         ,
    "0x02", "SIMULATION"            , ""          , "FGC is simulating the voltage source"    ,
    "0x03", "CALIBRATING"           , ""          , "FGC is calibrating its ADCs or DAC(s)"   ,
    "0x04", "TEST"                  , ""          , "FGC is in test mode"                     ,
    "0x05", "BOOT"                  , ""          , "FGC in the boot"                         ,
    "0x06", "PROGRAMMING"           , ""          , "FGC in programming state"                ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        }
{ "STATE_VS"                  , "STATE_VS__RAW"         , "0xFF", "INVALID" , "Voltage source state"                    ,
    "0x00", "INVALID"               , ""          , "VS state signals invalid"                ,
    "0x01", "FLT_OFF"               , ""          , "VS off with faults present"              ,
    "0x02", "FASTPA_OFF"            , ""          , "VS off with Fast Power Abort present"    ,
    "0x03", "OFF"                   , ""          , "VS off with no faults present"           ,
    "0x04", "FAST_STOP"             , ""          , "VS stopping due to fault or interlock"   ,
    "0x05", "STOPPING"              , ""          , "VS stopping due to user request"         ,
    "0x06", "STARTING"              , ""          , "VS starting"                             ,
    "0x07", "READY"                 , ""          , "VS ready"                                ,
    "0x08", "BLOCKED"               , ""          , "VS ready"                                ,
    "0x09", "NONE"                  , ""          , "No VS present"                           ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        }
{ "STATE_PC:0"                , "STATE_PC__RAW"         , "0xFF", "INVALID" , "Power Converter State"                   ,
    "0x00", "FLT_OFF"               , ""          , "Fault off"                               ,
    "0x01", "OFF"                   , ""          , "Off"                                     ,
    "0x02", "FLT_STOPPING"          , ""          , "Fault stopping"                          ,
    "0x03", "STOPPING"              , ""          , "Stopping"                                ,
    "0x04", "STARTING"              , ""          , "Starting"                                ,
    "0x05", "SLOW_ABORT"            , ""          , "Slow Abort"                              ,
    "0x06", "TO_STANDBY"            , ""          , "To standby"                              ,
    "0x07", "ON_STANDBY"            , ""          , "On standby"                              ,
    "0x08", "IDLE"                  , ""          , "Idle"                                    ,
    "0x09", "TO_CYCLING"            , ""          , "To Cycling"                              ,
    "0x0A", "ARMED"                 , ""          , "Armed"                                   ,
    "0x0B", "RUNNING"               , ""          , "Running"                                 ,
    "0x0C", "ABORTING"              , ""          , "Aborting"                                ,
    "0x0D", "CYCLING"               , ""          , "Cycling"                                 ,
    "0x0E", "POL_SWITCHING"         , ""          , "Polarity Switching"                      ,
    "0x0F", "BLOCKING"              , ""          , "Blocking"                                }
{ "STATE_PC:1"                , "STATE_PC__RAW"         , "0xFF", "INVALID" , "Power Converter State"                   ,
    "0x10", "ECONOMY"               , ""          , "Economy"                                 ,
    "0x11", "DIRECT"                , ""          , "Direct"                                  ,
    "0x12", "PAUSED"                , ""          , "Paused"                                  ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        ,
    ""    , ""                      , "INVALID"   , ""                                        }
}

# Long inputs

file "fgcudp_longin.template"
{
pattern
{ RECORD                      , PARAM                   , EGU     , DESC                                      }
{ "I_ERR_MA"                  , "I_ERR_MA__INT"         , "mA|mG" , "Current or field regulation error"       }
{ "I_DIFF_MA"                 , "I_DIFF_MA__INT"        , "mA"    , "Current measurement difference (mA)"     }
{ "EVENT_GROUP"               , "EVENT_GROUP__INT"      , ""      , "Ref. event group for non-cycling PCs"    }
{ "I_EARTH_PCNT"              , "I_EARTH_PCNT__INT"     , "%"     , "Earth fault current (% of trip limit)"   }
}

# Analog inputs

file "fgcudp_ai.template"
{
pattern
{ RECORD                      , PARAM                   , EGU         , PREC, DESC                                      }
{ "I_REF"                     , "I_REF__FLOAT"          , "A"         , "3" , "Current reference"                       }
{ "I_MEAS"                    , "I_MEAS__FLOAT"         , "A"         , "3" , "Validated current measurement"           }
{ "V_REF"                     , "V_REF__FLOAT"          , "V"         , "3" , "Voltage reference"                       }
{ "V_MEAS"                    , "V_MEAS__FLOAT"         , "V"         , "3" , "Power converter voltage measurement"     }
}



# End of file: ../../sw/kt/fgcepics/fgcudpSup/Db/fgcudp_class_63.substitutions
