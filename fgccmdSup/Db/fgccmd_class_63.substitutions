# ../../sw/kt/fgcepics/fgccmdSup/Db/fgccmd_class_63.substitutions - This file is automatically generated by `parser/Output/EPICS/records/cmd_records.pm`

# This is a template file - RECORD names can be edited!



##########################################
# Command/response records for class 63  #
##########################################



# Note (!):
# SET records: ':S' will be appended to record name
# GET records: ':G' will be appended to record name

######## Null properties (set only; value ignored; no ':S' suffix) ########

file "fgccmd_null_set.template"
{
pattern
{ RECORD                          , PROP                            , DESC                          }
{ "DEVICE:RESET"                  , "DEVICE.RESET"                  , ""                            }
{ "VS:RESET"                      , "VS.RESET"                      , ""                            }
}

######## Long string properties (decoded bitmask) ########

file "fgccmd_w_string_get.template"
{
pattern
{ RECORD                          , PROP                            , NELM    , DESC                          }
{ "DIAG:FAULTS"                   , "DIAG.FAULTS"                   , "256"   , ""                            }
}

file "fgccmd_w_string_set.template"
{
pattern
{ RECORD                          , PROP                            , NELM    , DESC                          }
}

######## String properties (decoded enum) ########

file "fgccmd_string_get.template"
{
pattern
{ RECORD                          , PROP                            , DESC                          }
{ "DCCT:SELECT"                 , "DCCT.SELECT"                   , "DCCT signal selector"        }
{ "MODE:PC"                     , "MODE.PC"                       , ""                            }
{ "MODE:PC_SIMPLIFIED"          , "MODE.PC_SIMPLIFIED"            , "Simplified power converter m"}
{ "REF:FUNC:REG_MODE"           , "REF.FUNC.REG_MODE"             , "Reference function mode"     }
{ "REF:FUNC:TYPE"               , "REF.FUNC.TYPE"                 , "Reference function type"     }
{ "REF:TEST:EXP_DECAY"          , "REF.TEST.EXP_DECAY"            , "Exponential decay control"   }
{ "REF:TEST:WINDOW"             , "REF.TEST.WINDOW"               , "Cosine window control"       }
{ "STATE:PC_SIMPLIFIED"         , "STATE.PC_SIMPLIFIED"           , ""                            }
}

file "fgccmd_string_set.template"
{
pattern
{ RECORD                          , PROP                            , DESC                          }
{ "DCCT:SELECT"                 , "DCCT.SELECT"                   , "DCCT signal selector"        }
{ "MODE:PC"                     , "MODE.PC"                       , ""                            }
{ "MODE:PC_SIMPLIFIED"          , "MODE.PC_SIMPLIFIED"            , "Simplified power converter m"}
{ "REF:FUNC:REG_MODE"           , "REF.FUNC.REG_MODE"             , "Reference function mode"     }
{ "REF:FUNC:TYPE"               , "REF.FUNC.TYPE"                 , "Reference function type"     }
{ "REF:TEST:EXP_DECAY"          , "REF.TEST.EXP_DECAY"            , "Exponential decay control"   }
{ "REF:TEST:WINDOW"             , "REF.TEST.WINDOW"               , "Cosine window control"       }
}

######## Real type properties ########

file "fgccmd_real_get.template"
{
pattern
{ RECORD                          , PROP                            , EGU     , PREC, DESC                          }
{ "LIMITS:OP:I:NEG"             , "LIMITS.OP.I.NEG"               , ""      , "3" , "Operational maximum negative"}
{ "LIMITS:OP:I:POS"             , "LIMITS.OP.I.POS"               , ""      , "3" , "Operational maximum positive"}
{ "LIMITS:OP:V:NEG"             , "LIMITS.OP.V.NEG"               , ""      , "3" , "Readback of maximum negative"}
{ "LIMITS:OP:V:POS"             , "LIMITS.OP.V.POS"               , ""      , "3" , "Readback of maximum positive"}
{ "REF:BCV:VALUE"               , "REF.BCV.VALUE"                 , ""      , "3" , "Field control value"         }
{ "REF:CCV:VALUE"               , "REF.CCV.VALUE"                 , ""      , "3" , "Current control value"       }
{ "MEAS:PULSE:VALUE"              , "MEAS.PULSE.VALUE"              , ""      , "6" , ""                            }
{ "MEAS:CUBEXP:VALUE"             , "MEAS.CUBEXP.VALUE"             , ""      , "6" , ""                            }
{ "MEAS:CUBEXP2:VALUE"            , "MEAS.CUBEXP2.VALUE"            , ""      , "6" , ""                            }
{ "MEAS:TABLE:FUNC:VALUE"         , "MEAS.TABLE.FUNC.VALUE"         , ""      , "6" , ""                            }
{ "MEAS:TABLE:FUNC2:VALUE"        , "MEAS.TABLE.FUNC2.VALUE"        , ""      , "6" , ""                            }
{ "MEAS:TABLE:FUNCLIST:VALUE"     , "MEAS.TABLE.FUNCLIST.VALUE"     , ""      , "6" , ""                            }
{ "REF:ABORT"                     , "REF.ABORT"                     , ""      , "6" , ""                            }
{ "REF:DIRECT:B:VALUE"            , "REF.DIRECT.B.VALUE"            , ""      , "6" , ""                            }
{ "REF:DIRECT:I:VALUE"            , "REF.DIRECT.I.VALUE"            , ""      , "6" , ""                            }
{ "REF:DIRECT:V:VALUE"            , "REF.DIRECT.V.VALUE"            , ""      , "6" , ""                            }
{ "REF:PLEP:ACCELERATION"       , "REF.PLEP.ACCELERATION"         , ""      , "3" , "PLEP parabolic acceleration/"}
{ "REF:PLEP:EXP_FINAL"          , "REF.PLEP.EXP_FINAL"            , ""      , "3" , "PLEP terminal value for expo"}
{ "REF:PLEP:EXP_TC"             , "REF.PLEP.EXP_TC"               , ""      , "3" , "PLEP exponential time consta"}
{ "REF:PLEP:FINAL"              , "REF.PLEP.FINAL"                , ""      , "3" , "Final PLEP reference"        }
{ "REF:PLEP:INITIAL"            , "REF.PLEP.INITIAL"              , ""      , "3" , "Initial PLEP reference"      }
{ "REF:PLEP:LINEAR_RATE"        , "REF.PLEP.LINEAR_RATE"          , ""      , "3" , "PLEP max linear rate of chan"}
{ "REF:PPPL:ACCELERATION1"      , "REF.PPPL.ACCELERATION1"        , ""      , "3" , "Acceleration during first (p"}
{ "REF:PPPL:ACCELERATION2"      , "REF.PPPL.ACCELERATION2"        , ""      , "3" , "Acceleration during second ("}
{ "REF:PPPL:ACCELERATION3"      , "REF.PPPL.ACCELERATION3"        , ""      , "3" , "Acceleration during third (p"}
{ "REF:PPPL:DURATION4"          , "REF.PPPL.DURATION4"            , ""      , "3" , "Duration of fourth (linear) "}
{ "REF:PPPL:INITIAL"            , "REF.PPPL.INITIAL"              , ""      , "3" , "Initial PPPL reference"      }
{ "REF:PPPL:RATE2"              , "REF.PPPL.RATE2"                , ""      , "3" , "Rate of change of start of s"}
{ "REF:PPPL:RATE4"              , "REF.PPPL.RATE4"                , ""      , "3" , "Rate of change of fourth (li"}
{ "REF:PPPL:REF4"               , "REF.PPPL.REF4"                 , ""      , "3" , "Reference at start of fourth"}
{ "REF:CUBEXP:REF"                , "REF.CUBEXP.REF"                , ""      , "6" , ""                            }
{ "REF:CUBEXP:RATE"               , "REF.CUBEXP.RATE"               , ""      , "6" , ""                            }
{ "REF:CUBEXP:TIME"               , "REF.CUBEXP.TIME"               , ""      , "6" , ""                            }
{ "REF:PULSE:AMPLITUDE:VALUE"     , "REF.PULSE.AMPLITUDE.VALUE"     , ""      , "6" , ""                            }
{ "REF:RAMP:ACCELERATION"       , "REF.RAMP.ACCELERATION"         , ""      , "3" , "RAMP parabolic acceleration" }
{ "REF:RAMP:DECELERATION"       , "REF.RAMP.DECELERATION"         , ""      , "3" , "RAMP parabolic deceleration" }
{ "REF:RAMP:FINAL"              , "REF.RAMP.FINAL"                , ""      , "3" , "Final RAMP reference"        }
{ "REF:RAMP:INITIAL"            , "REF.RAMP.INITIAL"              , ""      , "3" , "Initial RAMP reference"      }
{ "REF:RAMP:LINEAR_RATE"        , "REF.RAMP.LINEAR_RATE"          , ""      , "3" , "RAMP max linear rate of chan"}
{ "REF:RUN"                       , "REF.RUN"                       , ""      , "6" , ""                            }
{ "REF:TEST:AMPLITUDE"          , "REF.TEST.AMPLITUDE"            , ""      , "3" , "Test function peak-peak ampl"}
{ "REF:TEST:INITIAL"            , "REF.TEST.INITIAL"              , ""      , "3" , "Initial TEST reference"      }
{ "REF:TEST:PERIOD"             , "REF.TEST.PERIOD"               , ""      , "3" , "Test function period"        }
{ "REF:TRIM:DURATION"           , "REF.TRIM.DURATION"             , ""      , "3" , "Trim duration (s)"           }
{ "REF:TRIM:FINAL"              , "REF.TRIM.FINAL"                , ""      , "3" , "Final trim reference"        }
{ "REF:TRIM:INITIAL"            , "REF.TRIM.INITIAL"              , ""      , "3" , "Initial TRIM reference"      }
{ "REF:VCV:VALUE"               , "REF.VCV.VALUE"                 , ""      , "3" , "Voltage control value"       }
}

file "fgccmd_real_set.template"
{
pattern
{ RECORD                          , PROP                            , EGU     , PREC, DESC                          }
{ "REF:BCV:VALUE"               , "REF.BCV.VALUE"                 , ""      , "3" , "Field control value"         }
{ "REF:CCV:VALUE"               , "REF.CCV.VALUE"                 , ""      , "3" , "Current control value"       }
{ "REF:ABORT"                     , "REF.ABORT"                     , ""      , "6" , ""                            }
{ "REF:DIRECT:B:VALUE"            , "REF.DIRECT.B.VALUE"            , ""      , "6" , ""                            }
{ "REF:DIRECT:I:VALUE"            , "REF.DIRECT.I.VALUE"            , ""      , "6" , ""                            }
{ "REF:DIRECT:V:VALUE"            , "REF.DIRECT.V.VALUE"            , ""      , "6" , ""                            }
{ "REF:PLEP:ACCELERATION"       , "REF.PLEP.ACCELERATION"         , ""      , "3" , "PLEP parabolic acceleration/"}
{ "REF:PLEP:EXP_FINAL"          , "REF.PLEP.EXP_FINAL"            , ""      , "3" , "PLEP terminal value for expo"}
{ "REF:PLEP:EXP_TC"             , "REF.PLEP.EXP_TC"               , ""      , "3" , "PLEP exponential time consta"}
{ "REF:PLEP:FINAL"              , "REF.PLEP.FINAL"                , ""      , "3" , "Final PLEP reference"        }
{ "REF:PLEP:INITIAL"            , "REF.PLEP.INITIAL"              , ""      , "3" , "Initial PLEP reference"      }
{ "REF:PLEP:LINEAR_RATE"        , "REF.PLEP.LINEAR_RATE"          , ""      , "3" , "PLEP max linear rate of chan"}
{ "REF:PPPL:ACCELERATION1"      , "REF.PPPL.ACCELERATION1"        , ""      , "3" , "Acceleration during first (p"}
{ "REF:PPPL:ACCELERATION2"      , "REF.PPPL.ACCELERATION2"        , ""      , "3" , "Acceleration during second ("}
{ "REF:PPPL:ACCELERATION3"      , "REF.PPPL.ACCELERATION3"        , ""      , "3" , "Acceleration during third (p"}
{ "REF:PPPL:DURATION4"          , "REF.PPPL.DURATION4"            , ""      , "3" , "Duration of fourth (linear) "}
{ "REF:PPPL:INITIAL"            , "REF.PPPL.INITIAL"              , ""      , "3" , "Initial PPPL reference"      }
{ "REF:PPPL:RATE2"              , "REF.PPPL.RATE2"                , ""      , "3" , "Rate of change of start of s"}
{ "REF:PPPL:RATE4"              , "REF.PPPL.RATE4"                , ""      , "3" , "Rate of change of fourth (li"}
{ "REF:PPPL:REF4"               , "REF.PPPL.REF4"                 , ""      , "3" , "Reference at start of fourth"}
{ "REF:CUBEXP:REF"                , "REF.CUBEXP.REF"                , ""      , "6" , ""                            }
{ "REF:CUBEXP:RATE"               , "REF.CUBEXP.RATE"               , ""      , "6" , ""                            }
{ "REF:CUBEXP:TIME"               , "REF.CUBEXP.TIME"               , ""      , "6" , ""                            }
{ "REF:PULSE:AMPLITUDE:VALUE"     , "REF.PULSE.AMPLITUDE.VALUE"     , ""      , "6" , ""                            }
{ "REF:RAMP:ACCELERATION"       , "REF.RAMP.ACCELERATION"         , ""      , "3" , "RAMP parabolic acceleration" }
{ "REF:RAMP:DECELERATION"       , "REF.RAMP.DECELERATION"         , ""      , "3" , "RAMP parabolic deceleration" }
{ "REF:RAMP:FINAL"              , "REF.RAMP.FINAL"                , ""      , "3" , "Final RAMP reference"        }
{ "REF:RAMP:INITIAL"            , "REF.RAMP.INITIAL"              , ""      , "3" , "Initial RAMP reference"      }
{ "REF:RAMP:LINEAR_RATE"        , "REF.RAMP.LINEAR_RATE"          , ""      , "3" , "RAMP max linear rate of chan"}
{ "REF:RUN"                       , "REF.RUN"                       , ""      , "6" , ""                            }
{ "REF:TEST:AMPLITUDE"          , "REF.TEST.AMPLITUDE"            , ""      , "3" , "Test function peak-peak ampl"}
{ "REF:TEST:INITIAL"            , "REF.TEST.INITIAL"              , ""      , "3" , "Initial TEST reference"      }
{ "REF:TEST:PERIOD"             , "REF.TEST.PERIOD"               , ""      , "3" , "Test function period"        }
{ "REF:TRIM:DURATION"           , "REF.TRIM.DURATION"             , ""      , "3" , "Trim duration (s)"           }
{ "REF:TRIM:FINAL"              , "REF.TRIM.FINAL"                , ""      , "3" , "Final trim reference"        }
{ "REF:TRIM:INITIAL"            , "REF.TRIM.INITIAL"              , ""      , "3" , "Initial TRIM reference"      }
{ "REF:VCV:VALUE"               , "REF.VCV.VALUE"                 , ""      , "3" , "Voltage control value"       }
}

######## Long type properties ########

file "fgccmd_long_get.template"
{
pattern
{ RECORD                          , PROP                            , EGU     , DESC                          }
{ "CODE:VERSION:MAINPROG"       , "CODE.VERSION.MAINPROG"         , ""      , "Main program version"        }
{ "LOAD:SELECT"                   , "LOAD.SELECT"                   , ""      , ""                            }
{ "REF:TEST:NUM_PERIODS"        , "REF.TEST.NUM_PERIODS"          , ""      , "Number of periods for the te"}
}

file "fgccmd_long_set.template"
{
pattern
{ RECORD                          , PROP                            , EGU     , DESC                          }
{ "LOAD:SELECT"                   , "LOAD.SELECT"                   , ""      , ""                            }
{ "REF:TEST:NUM_PERIODS"        , "REF.TEST.NUM_PERIODS"          , ""      , "Number of periods for the te"}
}

######## Reference table properties (TIME,REF) ########

file "fgccmd_table_arr.template"
{
pattern
{ RECORD                          , PROP                            , NELM_DOUBLE , PREC, DESC                          }
{ "REF:TABLE:FUNCTION:TIME"       , "REF.TABLE.FUNCTION"            , "1024"      , "6" , "Time series"                 }
{ "REF:TABLE:FUNCTION:REF"        , "REF.TABLE.FUNCTION"            , "1024"      , "6" , "Reference series"            }
{ "REF:TABLE:FUNC:VALUE:TIME"     , "REF.TABLE.FUNC.VALUE"          , "1024"      , "6" , "Time series"                 }
{ "REF:TABLE:FUNC:VALUE:REF"      , "REF.TABLE.FUNC.VALUE"          , "1024"      , "6" , "Reference series"            }
}

file "fgccmd_table_get.template"
{
pattern
{ RECORD                          , PROP                            , NELM_DOUBLE , NELM_CHAR   , TIME_ARRAY                      , REF_ARRAY                       , DESC                          }
{ "REF:TABLE:FUNCTION"          , "REF.TABLE.FUNCTION"            , "1024"      , "65536"     , "REF:TABLE:FUNCTION:TIME"       , "REF:TABLE:FUNCTION:REF"        , "Table reference function (A,"}
{ "REF:TABLE:FUNC:VALUE"          , "REF.TABLE.FUNC.VALUE"          , "1024"      , "65536"     , "REF:TABLE:FUNC:VALUE:TIME"     , "REF:TABLE:FUNC:VALUE:REF"      , ""                            }
}

file "fgccmd_table_set.template"
{
pattern
{ RECORD                          , PROP                            , NELM_DOUBLE , NELM_CHAR   , TIME_ARRAY                      , REF_ARRAY                       , DESC                          }
{ "REF:TABLE:FUNCTION"          , "REF.TABLE.FUNCTION"            , "1024"      , "65536"     , "REF:TABLE:FUNCTION:TIME"       , "REF:TABLE:FUNCTION:REF"        , "Table reference function (A,"}
{ "REF:TABLE:FUNC:VALUE"          , "REF.TABLE.FUNC.VALUE"          , "1024"      , "65536"     , "REF:TABLE:FUNC:VALUE:TIME"     , "REF:TABLE:FUNC:VALUE:REF"      , ""                            }
}

# End of file: ../../sw/kt/fgcepics/fgccmdSup/Db/fgccmd_class_63.substitutions
